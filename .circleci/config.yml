version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/node:current

    steps:
      - checkout  # Ensure the code is checked out from the repository

      - run:
          name: Spin up environment
          command: echo "Environment setup complete"

      - run:
          name: Prepare Environment Variables
          command: |
            export NODE_ENV=development
            echo "NODE_ENV set to development"

      - run:
          name: Checking for package.json
          command: |
            if [ -f package.json ]; then
              echo "package.json found"
            else
              echo "package.json not found, exiting"
              exit 1
            fi

      - restore_cache:
          keys:
            - yarn-cache-{{ checksum "package-lock.json" }}
            # Updated to use package-lock.json if yarn.lock is not available

      - run:
          name: Install Dependencies
          command: |
            if [ -f yarn.lock ]; then
              yarn install
            else
              npm install
            fi
          # Installs dependencies using yarn if yarn.lock is present, otherwise npm

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-cache-{{ checksum "package-lock.json" }}
          # Update caching based on the correct lockfile

      - run:
          name: Determine lockfile
          command: |
            if [ -f yarn.lock ]; then
              echo "Using yarn.lock"
            else
              echo "Using package-lock.json"
            fi

      - run:
          name: Remove temporary links
          command: |
            echo "Removing temporary links (if any)"

      - run:
          name: Run Tests
          command: |
            if [ -f yarn.lock ]; then
              yarn test
            else
              npm test
            fi
          # Run tests based on the available package manager

workflows:
  build-and-test-workflow:
    jobs:
      - build-and-test
